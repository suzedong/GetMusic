# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push: # 将工作流设置为在将事件推送到 main and release/* 分支时运行
    branches: [ "main" ]
#    tags:
#      - v*
  pull_request: # 将工作流设置为在面向 main 分支的事件上运行 pull_request
      branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyfiglet tk pyinstaller

    - name: Compile and pack
      run: |
        pyinstaller -F --noconfirm --windowed --collect-all pyfiglet GetMusicGUI.py

    - name: Archive .app files # 将编译好的.app 文件上传到工作流的输出中
      uses: actions/upload-artifact@v3.1.3
      with:
        name: GetMusicGUI-${{ runner.os }} # 上传的文件名
        path: dist/* # 上传的文件路径

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.1.4
      env:
        GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      with:
        tag_name: v0.9.${{ github.run_number }}
        release_name: Release v0.9.${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Download .app files
      uses: actions/upload-artifact@v3.1.3
      with:
        name: GetMusicGUI-${{ runner.os }} # 上传的文件名
        path: dist # 上传的文件路径

    - name: Upload .app files to Release
      env:
        GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run: |
        mv dist/* ${{ github.workspace }} # 将编译好的.app 文件移动到工作流的工作目录下
        gh release upload ${{ github.run_number }} dist/* # 将编译好的.app 文件上传到 Release